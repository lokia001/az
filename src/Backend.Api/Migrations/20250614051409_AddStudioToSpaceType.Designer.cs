// <auto-generated />
using System;
using Backend.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250614051409_AddStudioToSpaceType")]
    partial class AddStudioToSpaceType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Backend.Api.Modules.CommunityContent.Domain.Entities.Community", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Communities", "community_content");
                });

            modelBuilder.Entity("Backend.Api.Modules.CommunityContent.Domain.Entities.CommunityMember", b =>
                {
                    b.Property<Guid>("CommunityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("CommunityId", "UserId");

                    b.ToTable("CommunityMembers", "community_content");
                });

            modelBuilder.Entity("Backend.Api.Modules.CommunityContent.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthorUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CommunityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ViewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommunityId");

                    b.ToTable("Posts", "community_content");
                });

            modelBuilder.Entity("Backend.Api.Modules.Engagement.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ParentCommentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentEntityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentEntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("ParentEntityType", "ParentEntityId")
                        .HasDatabaseName("IX_Comments_Parent");

                    b.ToTable("Comments", "engagement");
                });

            modelBuilder.Entity("Backend.Api.Modules.Engagement.Domain.Entities.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TargetEntityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetEntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetEntityType", "TargetEntityId")
                        .HasDatabaseName("IX_Reactions_Target");

                    b.HasIndex("UserId", "TargetEntityType", "TargetEntityId", "Type")
                        .IsUnique()
                        .HasDatabaseName("IX_Reactions_UserTargetType");

                    b.ToTable("Reactions", "engagement");
                });

            modelBuilder.Entity("Backend.Api.Modules.Engagement.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentText")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsVerifiedOwnerReply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("SpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews", "engagement");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ActualCheckIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ActualCheckOut")
                        .HasColumnType("TEXT");

                    b.Property<string>("BookingCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("NotesFromOwner")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("NotesFromUser")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookingCode")
                        .IsUnique()
                        .HasFilter("[BookingCode] IS NOT NULL");

                    b.HasIndex("SpaceId");

                    b.ToTable("Bookings", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccessInstructions")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("BufferMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CancellationNoticeHours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CleaningDurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("CloseTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("HouseRules")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("LastEditedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("MaxBookingDurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinBookingDurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("OpenTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Slug")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Spaces", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceCustomAmenity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SpaceId");

                    b.ToTable("SpaceCustomAmenities", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceCustomService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsIncludedInBasePrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SpaceId");

                    b.ToTable("SpaceCustomServices", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Caption")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCoverImage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SpaceId");

                    b.ToTable("SpaceImages", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceSystemAmenity", b =>
                {
                    b.Property<Guid>("SpaceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SystemAmenityId")
                        .HasColumnType("TEXT");

                    b.HasKey("SpaceId", "SystemAmenityId");

                    b.HasIndex("SystemAmenityId");

                    b.ToTable("SpaceSystemAmenities", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceSystemSpaceService", b =>
                {
                    b.Property<Guid>("SpaceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SystemSpaceServiceId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsIncludedInBasePrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PriceOverride")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SpaceId", "SystemSpaceServiceId");

                    b.HasIndex("SystemSpaceServiceId");

                    b.ToTable("SpaceSystemSpaceServices", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SystemAmenity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SystemAmenities", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SystemSpaceService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SystemSpaceServices", "space_booking");
                });

            modelBuilder.Entity("Backend.Api.Modules.UserRelated.Domain.Entities.OwnerProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessLicenseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("OwnerProfiles", "user_related");
                });

            modelBuilder.Entity("Backend.Api.Modules.UserRelated.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", "user_related");
                });

            modelBuilder.Entity("Backend.Api.Modules.CommunityContent.Domain.Entities.CommunityMember", b =>
                {
                    b.HasOne("Backend.Api.Modules.CommunityContent.Domain.Entities.Community", "Community")
                        .WithMany("Members")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Community");
                });

            modelBuilder.Entity("Backend.Api.Modules.CommunityContent.Domain.Entities.Post", b =>
                {
                    b.HasOne("Backend.Api.Modules.CommunityContent.Domain.Entities.Community", "Community")
                        .WithMany("Posts")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Community");
                });

            modelBuilder.Entity("Backend.Api.Modules.Engagement.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Backend.Api.Modules.Engagement.Domain.Entities.Comment", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("ParentCommentId");

                    b.Navigation("ParentComment");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.Booking", b =>
                {
                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", "Space")
                        .WithMany("Bookings")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Space");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceCustomAmenity", b =>
                {
                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", "Space")
                        .WithMany("CustomAmenities")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceCustomService", b =>
                {
                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", "Space")
                        .WithMany("CustomServices")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceImage", b =>
                {
                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", "Space")
                        .WithMany("SpaceImages")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceSystemAmenity", b =>
                {
                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", "Space")
                        .WithMany("SystemAmenitiesLink")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.SystemAmenity", "SystemAmenity")
                        .WithMany("SpaceLinks")
                        .HasForeignKey("SystemAmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");

                    b.Navigation("SystemAmenity");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SpaceSystemSpaceService", b =>
                {
                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", "Space")
                        .WithMany("SystemServicesLink")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Api.Modules.SpaceBooking.Domain.Entities.SystemSpaceService", "SystemSpaceService")
                        .WithMany("SpaceLinks")
                        .HasForeignKey("SystemSpaceServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");

                    b.Navigation("SystemSpaceService");
                });

            modelBuilder.Entity("Backend.Api.Modules.UserRelated.Domain.Entities.OwnerProfile", b =>
                {
                    b.HasOne("Backend.Api.Modules.UserRelated.Domain.Entities.User", "User")
                        .WithOne("OwnerProfile")
                        .HasForeignKey("Backend.Api.Modules.UserRelated.Domain.Entities.OwnerProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Api.Modules.CommunityContent.Domain.Entities.Community", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Backend.Api.Modules.Engagement.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.Space", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CustomAmenities");

                    b.Navigation("CustomServices");

                    b.Navigation("SpaceImages");

                    b.Navigation("SystemAmenitiesLink");

                    b.Navigation("SystemServicesLink");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SystemAmenity", b =>
                {
                    b.Navigation("SpaceLinks");
                });

            modelBuilder.Entity("Backend.Api.Modules.SpaceBooking.Domain.Entities.SystemSpaceService", b =>
                {
                    b.Navigation("SpaceLinks");
                });

            modelBuilder.Entity("Backend.Api.Modules.UserRelated.Domain.Entities.User", b =>
                {
                    b.Navigation("OwnerProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
